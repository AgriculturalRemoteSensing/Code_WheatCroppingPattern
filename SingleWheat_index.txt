var china = ee.FeatureCollection("projects/ee-2418127013/assets/china_mainland"),
    sentinel = ee.ImageCollection("COPERNICUS/S2");
//////////////////////////cropland////////////////////////////////
var CropLayer = require('users/Nimrod/Package:CropLayer');
var crop = CropLayer.CropLayer();
///////////////////////////Sentinel2(china)///////////////////////
/////////////////////////////////////////
function maskS2clouds(image) {
    var qa = image.select('QA60');
    var cloudBitMask = Math.pow(2, 10);
    var cirrusBitMask = Math.pow(2, 11);
    var mask = qa.bitwiseAnd(cloudBitMask).eq(0).and(
        qa.bitwiseAnd(cirrusBitMask).eq(0));
    return image.updateMask(mask);
}

///////////////////////////////////////
var cal_ndvi = function(image) {
    var time_start = image.get("system:time_start");
    image = image.multiply(0.0001);
    var red = image.select('B4');
    var nir = image.select('B8');
    var EVI2 = ((nir.subtract(red)).divide(nir.add(red.multiply(2.4)).add(1))).multiply(2.5).rename('EVI2');
    return image.addBands(EVI2).set("system:time_start", time_start);
};
////////////////////////////////////////
var year = 2020;
var Date_Start = ee.Date.fromYMD(year, 1, 1);
var Date_End = ee.Date.fromYMD(ee.Number(year + 1), 1, 1);
var n_days = Date_End.difference(Date_Start, 'day').round();
var dates1 = ee.List.sequence(0, n_days, 10);
var make_datelist = function(n) {
    return Date_Start.advance(n, 'day');
};
var dates = dates1.map(make_datelist);
var fnc = function(d1) {
    var start = ee.Date(d1);
    var time = ee.Date(d1).advance(4, 'day').millis();
    var end = ee.Date(d1).advance(10, 'day');
    var date_range = ee.DateRange(start, end);
    var S1 = sentinel.filterDate(date_range).map(maskS2clouds);
    var mosaic = S1.median().set('system:time_start', time); 
    return mosaic
};
var list_of_images = dates.map(fnc);
var image_mosaic = ee.ImageCollection(list_of_images).filterBounds(china).map(function clip(img) {
    return img.clip(china)
});

///////////////////////////////////////////////////////////////////////////
var linear = function(imagecollection) {
    var pkg_smooth = require('users/JFC/math:pkg_smooth.js');
    var frame = 10 * 3;
    var nodata = -9999;
    var imgcol_index = pkg_smooth.linearInterp(imagecollection, frame, nodata);
    return imgcol_index;
}
var image_mosaic_B4 = linear(image_mosaic.select('B4')).select('B4').sort('system:time_start');
var image_mosaic_B8 = linear(image_mosaic.select('B8')).select('B8').sort('system:time_start');
var imgcol_mosaic_linear1 = image_mosaic_B4.combine(image_mosaic_B8);
var imgcol_mosaic_linear = imgcol_mosaic_linear1.sort('system:time_start');
var imgcol = imgcol_mosaic_linear.map(cal_ndvi);
var imgcol_EVI2_index1 = imgcol.select('EVI2');
//--------------------------------WS---------------------------------------------------
/** Initialize weights ------------------------------------------------------ */
function qc_EVI2(img) {
    var w = img.select(0).mask();
    return ee.Image(img.select('EVI2')) 
        .addBands(w)
        .rename(['EVI2', 'w'])
        .copyProperties(img, img.propertyNames());
}
var pkg_whit = require('users/yingze/Math:pkg_whit');
/** GLOBAL FUNCTIONS -------------------------------------------------------- */
var date2str = function(x) {
    return ee.Date(x).format('YYYY_MM_dd');
};
/** ------------------------------------------------------------------------- */
// MAIN SCRIPT 
/** Initial parameters for whittaker smoother --------------------------- */
var lambda = 10;
var mask = imgcol_EVI2_index1.select('EVI2').mosaic().mask();
/** 1. pre-process mask NA values and init weights */
var imgcol_EVI2 = imgcol_EVI2_index1.map(function(img) {
    // img = img.unmask(-1.0);
    return ee.Image(qc_EVI2(img)).updateMask(mask);
});
/** 2. Whittaker smoother ------------------------------------------------------ */
var options_whit = {
    order: 2, // difference order
    wFUN: pkg_whit.wBisquare_array, // weigths updating function
    iters: 2, // Whittaker iterations
    min_ValidPerc: 0, // pixel valid ratio less then `min_ValidPerc`, is not smoothed.
    min_A: 0.02, // Amplitude A = ylu_max - ylu_min, points are masked if 
    // A < min_A. If ylu not specified, min_A not work
    missing: -0.05 // Missing value in band_sm are set to missing.
    // matrixSolve = 1;  // whittaker, matrix solve option:
    // 1:matrixSolve, 2:matrixCholeskyDecomposition, 3:matrixPseudoInverse 
};
var whit_EVI2 = pkg_whit.whit_imgcol(imgcol_EVI2, options_whit, lambda);
var mat_zs_EVI2 = whit_EVI2.zs;
/** 3. convert 2d array into multi-bands -------------------------------- */
var datelist_EVI2 = ee.List(imgcol_EVI2.aggregate_array('system:time_start')).map(date2str);
var ids_EVI2 = datelist_EVI2.map(function(val) {
    return ee.String('b').cat(val);
});
var img_WS_EVI2_out = mat_zs_EVI2.arraySlice(1, 1, 2).arrayProject([0]).arrayFlatten([ids_EVI2]); 
////////////////////////////////////将EVI2转换成imgcollection//////////////////////////////////////////////////
var img_WS_EVI2_out_toarray = img_WS_EVI2_out.toArray();

function get_EVI2img(i) {
    var subarray = img_WS_EVI2_out_toarray.arraySlice(0, ee.Number(i).int(), ee.Number(i).add(1).int());
    return subarray.arrayProject([0]).arrayFlatten([
        ['EVI2_WS']
    ]);
}
var imgcol_EVI2_index1_tolist = imgcol_EVI2_index1.toList(imgcol_EVI2_index1.size());
var runLength_EVI2 = ee.List.sequence(0, imgcol_EVI2_index1.size().subtract(1));
var WS_EVI2 = ee.ImageCollection.fromImages(runLength_EVI2.map(function(i) {
    var time = ee.Image(imgcol_EVI2_index1_tolist.get(ee.Number(i))).get('system:time_start');
    return get_EVI2img(i).set('system:time_start', time)
}));

var avgsentinel_EVI2 = WS_EVI2;

////////////////////////////////////////////////////
var upyearsentinel_start = ee.Date.fromYMD(year, 6, 6);
var upyearsentinel_end = ee.Date.fromYMD(year, 11, 13);
var downyearsentinel_EVI2 = WS_EVI2.filterDate(upyearsentinel_start, upyearsentinel_end);
var downyearsentinel_EVI2_List = downyearsentinel_EVI2.toList(16);
var D_EVI2_70value = downyearsentinel_EVI2.reduce(ee.Reducer.percentile([70])); 
var runLength2 = ee.List.sequence(0, downyearsentinel_EVI2_List.size().subtract(1))
// ////////////////////////////////////////////////
var D_EVI2_High_70value = downyearsentinel_EVI2.map(function(img) {
    var image = ee.Image(img);
    var imagemask = image.where(image.gte(D_EVI2_70value), 1);
    var select_image1 = imagemask.updateMask(imagemask.eq(1));
    var select_image = select_image1.unmask(0);
    return select_image;
});
var D_EVI2_High_70value_List = D_EVI2_High_70value.toList(16); 

/////////////////////////////////////////////////
var D_COL = ee.ImageCollection.fromImages(runLength2.map(function(i) {
    var image = ee.Image(downyearsentinel_EVI2_List.get(ee.Number(i)))
    var time = image.get('system:time_start')
    var image_day = ee.Number.parse(ee.Date(time).difference(ee.Date('2019-12-31'), 'day')).toInt();
    var result_image = image.rename('result');
    var constant = result_image.addBands(image_day).toInt().set('system:time_start', time).rename(['result', 'day'])
    var mask = (constant.gte(176)).and(constant.lte(296))
    return mask.select('day').rename('constant')
}))
var D_COL_List = D_COL.toList(16); 

/////////////////////////////////////////////////
var D_EVI2_restrict_Coll = ee.ImageCollection.fromImages(runLength2.map(function(i) {
    var EVI2_H_image = ee.Image(D_EVI2_High_70value_List.get(ee.Number(i)));
    var restrict_image = ee.Image(D_COL_List.get(ee.Number(i)));
    var EVI2_restrict_image = EVI2_H_image.multiply(restrict_image);
    return EVI2_restrict_image
}));

var D_num = D_EVI2_restrict_Coll.sum();

/////////////////////////////////////////////////
var Qujian_result = D_num.updateMask(crop.gt(0)).clip(china);
Map.addLayer(Qujian_result, {}, 'Qujian_result', false);

///////////////////////toAsset//////////////////////
 Export.image.toAsset({
  image:Qujian_result.toInt32(),
  description:"D_Qujian_2020",
  assetId:"projects/ee-g1083018/assets/D_Qujian",
  region:china,
  maxPixels:1e13,
  scale:10,
  crs:"EPSG:4326",
});